/**
 * Copyright (c) 2000-2012 Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package by.cnb.liferay.portlet.collapsableadvert.model.impl;

import by.cnb.liferay.portlet.collapsableadvert.model.Advert;
import by.cnb.liferay.portlet.collapsableadvert.model.AdvertModel;
import by.cnb.liferay.portlet.collapsableadvert.model.AdvertSoap;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Advert service. Represents a row in the
 * &quot;Advert&quot; database table, with each column mapped to a
 * property of this class.
 * 
 * <p>
 * This implementation and its corresponding interface
 * {@link by.cnb.liferay.portlet.collapsableadvert.model.AdvertModel} exist only
 * as a container for the default property accessors generated by
 * ServiceBuilder. Helper methods and all application logic should be put in
 * {@link AdvertImpl}.
 * </p>
 * 
 * @author Brian Wing Shun Chan
 * @see AdvertImpl
 * @see by.cnb.liferay.portlet.collapsableadvert.model.Advert
 * @see by.cnb.liferay.portlet.collapsableadvert.model.AdvertModel
 * @generated
 */
@JSON(strict = true)
public class AdvertModelImpl extends BaseModelImpl<Advert> implements
		AdvertModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 * 
	 * Never modify or reference this class directly. All methods that expect a
	 * advert model instance should use the {@link
	 * by.cnb.liferay.portlet.collapsableadvert.model.Advert} interface instead.
	 */
	public static final String TABLE_NAME = "Advert";
	public static final Object[][] TABLE_COLUMNS = {
			{ "uuid_", Types.VARCHAR }, { "entryId", Types.BIGINT },
			{ "groupId", Types.BIGINT }, { "companyId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }, { "name", Types.VARCHAR } };
	public static final String TABLE_SQL_CREATE = "create table Advert (uuid_ VARCHAR(75) null,entryId LONG not null primary key,groupId LONG,companyId LONG,createDate DATE null,modifiedDate DATE null,name VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table Advert";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil
			.getBoolean(
					com.liferay.util.service.ServiceProps
							.get("value.object.entity.cache.enabled.by.cnb.liferay.portlet.collapsableadvert.model.Advert"),
					true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil
			.getBoolean(
					com.liferay.util.service.ServiceProps
							.get("value.object.finder.cache.enabled.by.cnb.liferay.portlet.collapsableadvert.model.Advert"),
					true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil
			.getBoolean(
					com.liferay.util.service.ServiceProps
							.get("value.object.column.bitmask.enabled.by.cnb.liferay.portlet.collapsableadvert.model.Advert"),
					true);
	public static long GROUPID_COLUMN_BITMASK = 1L;
	public static long UUID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 * 
	 * @param soapModel
	 *            the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Advert toModel(AdvertSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Advert model = new AdvertImpl();

		model.setUuid(soapModel.getUuid());
		model.setEntryId(soapModel.getEntryId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setName(soapModel.getName());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 * 
	 * @param soapModels
	 *            the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Advert> toModels(AdvertSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Advert> models = new ArrayList<Advert>(soapModels.length);

		for (AdvertSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil
			.getLong(com.liferay.util.service.ServiceProps
					.get("lock.expiration.time.by.cnb.liferay.portlet.collapsableadvert.model.Advert"));

	public AdvertModelImpl() {
	}

	public long getPrimaryKey() {
		return _entryId;
	}

	public void setPrimaryKey(long primaryKey) {
		setEntryId(primaryKey);
	}

	public Serializable getPrimaryKeyObj() {
		return new Long(_entryId);
	}

	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long) primaryKeyObj).longValue());
	}

	public Class<?> getModelClass() {
		return Advert.class;
	}

	public String getModelClassName() {
		return Advert.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("uuid", getUuid());
		attributes.put("entryId", getEntryId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("name", getName());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String uuid = (String) attributes.get("uuid");

		if (uuid != null) {
			setUuid(uuid);
		}

		Long entryId = (Long) attributes.get("entryId");

		if (entryId != null) {
			setEntryId(entryId);
		}

		Long groupId = (Long) attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long) attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Date createDate = (Date) attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date) attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String name = (String) attributes.get("name");

		if (name != null) {
			setName(name);
		}
	}

	@JSON
	public String getUuid() {
		if (_uuid == null) {
			return StringPool.BLANK;
		} else {
			return _uuid;
		}
	}

	public void setUuid(String uuid) {
		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	public long getEntryId() {
		return _entryId;
	}

	public void setEntryId(long entryId) {
		_entryId = entryId;
	}

	@JSON
	public long getGroupId() {
		return _groupId;
	}

	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	public long getCompanyId() {
		return _companyId;
	}

	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	public Date getCreateDate() {
		return _createDate;
	}

	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		} else {
			return _name;
		}
	}

	public void setName(String name) {
		_name = name;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
				Advert.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Advert toEscapedModel() {
		if (_escapedModelProxy == null) {
			_escapedModelProxy = (Advert) ProxyUtil.newProxyInstance(
					_classLoader, _escapedModelProxyInterfaces,
					new AutoEscapeBeanHandler(this));
		}

		return _escapedModelProxy;
	}

	@Override
	public Object clone() {
		AdvertImpl advertImpl = new AdvertImpl();

		advertImpl.setUuid(getUuid());
		advertImpl.setEntryId(getEntryId());
		advertImpl.setGroupId(getGroupId());
		advertImpl.setCompanyId(getCompanyId());
		advertImpl.setCreateDate(getCreateDate());
		advertImpl.setModifiedDate(getModifiedDate());
		advertImpl.setName(getName());

		advertImpl.resetOriginalValues();

		return advertImpl;
	}

	public int compareTo(Advert advert) {
		long primaryKey = advert.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		} else if (getPrimaryKey() > primaryKey) {
			return 1;
		} else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (obj == null) {
			return false;
		}

		Advert advert = null;

		try {
			advert = (Advert) obj;
		} catch (ClassCastException cce) {
			return false;
		}

		long primaryKey = advert.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		} else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int) getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		AdvertModelImpl advertModelImpl = this;

		advertModelImpl._originalUuid = advertModelImpl._uuid;

		advertModelImpl._originalGroupId = advertModelImpl._groupId;

		advertModelImpl._setOriginalGroupId = false;

		advertModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Advert> toCacheModel() {
		AdvertCacheModel advertCacheModel = new AdvertCacheModel();

		advertCacheModel.uuid = getUuid();

		String uuid = advertCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			advertCacheModel.uuid = null;
		}

		advertCacheModel.entryId = getEntryId();

		advertCacheModel.groupId = getGroupId();

		advertCacheModel.companyId = getCompanyId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			advertCacheModel.createDate = createDate.getTime();
		} else {
			advertCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			advertCacheModel.modifiedDate = modifiedDate.getTime();
		} else {
			advertCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		advertCacheModel.name = getName();

		String name = advertCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			advertCacheModel.name = null;
		}

		return advertCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(15);

		sb.append("{uuid=");
		sb.append(getUuid());
		sb.append(", entryId=");
		sb.append(getEntryId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", name=");
		sb.append(getName());
		sb.append("}");

		return sb.toString();
	}

	public String toXmlString() {
		StringBundler sb = new StringBundler(25);

		sb.append("<model><model-name>");
		sb.append("by.cnb.liferay.portlet.collapsableadvert.model.Advert");
		sb.append("</model-name>");

		sb.append("<column><column-name>uuid</column-name><column-value><![CDATA[");
		sb.append(getUuid());
		sb.append("]]></column-value></column>");
		sb.append("<column><column-name>entryId</column-name><column-value><![CDATA[");
		sb.append(getEntryId());
		sb.append("]]></column-value></column>");
		sb.append("<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append("<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append("<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append("<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append("<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Advert.class.getClassLoader();
	private static Class<?>[] _escapedModelProxyInterfaces = new Class[] { Advert.class };
	private String _uuid;
	private String _originalUuid;
	private long _entryId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private Date _createDate;
	private Date _modifiedDate;
	private String _name;
	private long _columnBitmask;
	private Advert _escapedModelProxy;
}